//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DdmFileManager.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetData", ReplyAction="http://tempuri.org/IService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetData", ReplyAction="http://tempuri.org/IService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserFolders", ReplyAction="http://tempuri.org/IService/GetUserFoldersResponse")]
        DdmHelpers.FileTree.Entity.FolderEntity GetUserFolders(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserFolders", ReplyAction="http://tempuri.org/IService/GetUserFoldersResponse")]
        System.Threading.Tasks.Task<DdmHelpers.FileTree.Entity.FolderEntity> GetUserFoldersAsync(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllUserTags", ReplyAction="http://tempuri.org/IService/GetAllUserTagsResponse")]
        DbController.TableEntityes.Tag[] GetAllUserTags(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllUserTags", ReplyAction="http://tempuri.org/IService/GetAllUserTagsResponse")]
        System.Threading.Tasks.Task<DbController.TableEntityes.Tag[]> GetAllUserTagsAsync(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddTag", ReplyAction="http://tempuri.org/IService/AddTagResponse")]
        DbController.TableEntityes.Tag AddTag(System.Guid userId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddTag", ReplyAction="http://tempuri.org/IService/AddTagResponse")]
        System.Threading.Tasks.Task<DbController.TableEntityes.Tag> AddTagAsync(System.Guid userId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateFile", ReplyAction="http://tempuri.org/IService/CreateFileResponse")]
        Ddm.Db.TableEntityes.DigitalFile CreateFile(byte[] bytes, string name, string CheckSum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/CreateFile", ReplyAction="http://tempuri.org/IService/CreateFileResponse")]
        System.Threading.Tasks.Task<Ddm.Db.TableEntityes.DigitalFile> CreateFileAsync(byte[] bytes, string name, string CheckSum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddFileToFolder", ReplyAction="http://tempuri.org/IService/AddFileToFolderResponse")]
        DbController.TableEntityes.FolderVsFile AddFileToFolder(System.Guid fileId, System.Guid folderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddFileToFolder", ReplyAction="http://tempuri.org/IService/AddFileToFolderResponse")]
        System.Threading.Tasks.Task<DbController.TableEntityes.FolderVsFile> AddFileToFolderAsync(System.Guid fileId, System.Guid folderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateFolderStruct", ReplyAction="http://tempuri.org/IService/UpdateFolderStructResponse")]
        System.Collections.Generic.Dictionary<string, System.Guid> UpdateFolderStruct(System.Guid userId, DdmHelpers.FileTree.Entity.FolderEntity userFolder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateFolderStruct", ReplyAction="http://tempuri.org/IService/UpdateFolderStructResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, System.Guid>> UpdateFolderStructAsync(System.Guid userId, DdmHelpers.FileTree.Entity.FolderEntity userFolder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUser", ReplyAction="http://tempuri.org/IService/GetUserResponse")]
        DbController.TableEntityes.User GetUser(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUser", ReplyAction="http://tempuri.org/IService/GetUserResponse")]
        System.Threading.Tasks.Task<DbController.TableEntityes.User> GetUserAsync(string login);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : DdmFileManager.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<DdmFileManager.ServiceReference1.IService>, DdmFileManager.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public DdmHelpers.FileTree.Entity.FolderEntity GetUserFolders(System.Guid userId) {
            return base.Channel.GetUserFolders(userId);
        }
        
        public System.Threading.Tasks.Task<DdmHelpers.FileTree.Entity.FolderEntity> GetUserFoldersAsync(System.Guid userId) {
            return base.Channel.GetUserFoldersAsync(userId);
        }
        
        public DbController.TableEntityes.Tag[] GetAllUserTags(System.Guid userId) {
            return base.Channel.GetAllUserTags(userId);
        }
        
        public System.Threading.Tasks.Task<DbController.TableEntityes.Tag[]> GetAllUserTagsAsync(System.Guid userId) {
            return base.Channel.GetAllUserTagsAsync(userId);
        }
        
        public DbController.TableEntityes.Tag AddTag(System.Guid userId, string name) {
            return base.Channel.AddTag(userId, name);
        }
        
        public System.Threading.Tasks.Task<DbController.TableEntityes.Tag> AddTagAsync(System.Guid userId, string name) {
            return base.Channel.AddTagAsync(userId, name);
        }
        
        public Ddm.Db.TableEntityes.DigitalFile CreateFile(byte[] bytes, string name, string CheckSum) {
            return base.Channel.CreateFile(bytes, name, CheckSum);
        }
        
        public System.Threading.Tasks.Task<Ddm.Db.TableEntityes.DigitalFile> CreateFileAsync(byte[] bytes, string name, string CheckSum) {
            return base.Channel.CreateFileAsync(bytes, name, CheckSum);
        }
        
        public DbController.TableEntityes.FolderVsFile AddFileToFolder(System.Guid fileId, System.Guid folderId) {
            return base.Channel.AddFileToFolder(fileId, folderId);
        }
        
        public System.Threading.Tasks.Task<DbController.TableEntityes.FolderVsFile> AddFileToFolderAsync(System.Guid fileId, System.Guid folderId) {
            return base.Channel.AddFileToFolderAsync(fileId, folderId);
        }
        
        public System.Collections.Generic.Dictionary<string, System.Guid> UpdateFolderStruct(System.Guid userId, DdmHelpers.FileTree.Entity.FolderEntity userFolder) {
            return base.Channel.UpdateFolderStruct(userId, userFolder);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, System.Guid>> UpdateFolderStructAsync(System.Guid userId, DdmHelpers.FileTree.Entity.FolderEntity userFolder) {
            return base.Channel.UpdateFolderStructAsync(userId, userFolder);
        }
        
        public DbController.TableEntityes.User GetUser(string login) {
            return base.Channel.GetUser(login);
        }
        
        public System.Threading.Tasks.Task<DbController.TableEntityes.User> GetUserAsync(string login) {
            return base.Channel.GetUserAsync(login);
        }
    }
}
