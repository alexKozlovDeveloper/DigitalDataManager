//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DdmWebClient.DdmWcfServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/UserFilesDbController.Entityes")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DdmWebClient.DdmWcfServiceReference.Album[] AlbumsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] FriendsIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DdmWebClient.DdmWcfServiceReference.Album[] Albums {
            get {
                return this.AlbumsField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumsField, value) != true)) {
                    this.AlbumsField = value;
                    this.RaisePropertyChanged("Albums");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] FriendsId {
            get {
                return this.FriendsIdField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendsIdField, value) != true)) {
                    this.FriendsIdField = value;
                    this.RaisePropertyChanged("FriendsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Album", Namespace="http://schemas.datacontract.org/2004/07/UserFilesDbController.Entityes")]
    [System.SerializableAttribute()]
    public partial class Album : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DdmWebClient.DdmWcfServiceReference.DigitalFile[] FilesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] UsersIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DdmWebClient.DdmWcfServiceReference.DigitalFile[] Files {
            get {
                return this.FilesField;
            }
            set {
                if ((object.ReferenceEquals(this.FilesField, value) != true)) {
                    this.FilesField = value;
                    this.RaisePropertyChanged("Files");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] UsersId {
            get {
                return this.UsersIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersIdField, value) != true)) {
                    this.UsersIdField = value;
                    this.RaisePropertyChanged("UsersId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DigitalFile", Namespace="http://schemas.datacontract.org/2004/07/UserFilesDbController.Entityes")]
    [System.SerializableAttribute()]
    public partial class DigitalFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid[] AlbumsIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid[] AlbumsId {
            get {
                return this.AlbumsIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AlbumsIdField, value) != true)) {
                    this.AlbumsIdField = value;
                    this.RaisePropertyChanged("AlbumsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DdmWcfServiceReference.IDdmService")]
    public interface IDdmService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/CreateUser", ReplyAction="http://tempuri.org/IDdmService/CreateUserResponse")]
        System.Guid CreateUser(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/CreateUser", ReplyAction="http://tempuri.org/IDdmService/CreateUserResponse")]
        System.Threading.Tasks.Task<System.Guid> CreateUserAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/CreateAlbum", ReplyAction="http://tempuri.org/IDdmService/CreateAlbumResponse")]
        System.Guid CreateAlbum(string albumName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/CreateAlbum", ReplyAction="http://tempuri.org/IDdmService/CreateAlbumResponse")]
        System.Threading.Tasks.Task<System.Guid> CreateAlbumAsync(string albumName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/CreateFile", ReplyAction="http://tempuri.org/IDdmService/CreateFileResponse")]
        System.Guid CreateFile(System.IO.Stream dataStream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/CreateFile", ReplyAction="http://tempuri.org/IDdmService/CreateFileResponse")]
        System.Threading.Tasks.Task<System.Guid> CreateFileAsync(System.IO.Stream dataStream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/UpdateFile", ReplyAction="http://tempuri.org/IDdmService/UpdateFileResponse")]
        void UpdateFile(System.IO.Stream dataStream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/UpdateFile", ReplyAction="http://tempuri.org/IDdmService/UpdateFileResponse")]
        System.Threading.Tasks.Task UpdateFileAsync(System.IO.Stream dataStream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/GetFileStream", ReplyAction="http://tempuri.org/IDdmService/GetFileStreamResponse")]
        System.IO.Stream GetFileStream(System.Guid fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/GetFileStream", ReplyAction="http://tempuri.org/IDdmService/GetFileStreamResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetFileStreamAsync(System.Guid fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/AddAlbumToUser", ReplyAction="http://tempuri.org/IDdmService/AddAlbumToUserResponse")]
        void AddAlbumToUser(System.Guid userId, System.Guid albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/AddAlbumToUser", ReplyAction="http://tempuri.org/IDdmService/AddAlbumToUserResponse")]
        System.Threading.Tasks.Task AddAlbumToUserAsync(System.Guid userId, System.Guid albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/AddFileToAlbum", ReplyAction="http://tempuri.org/IDdmService/AddFileToAlbumResponse")]
        void AddFileToAlbum(System.Guid albumId, System.Guid fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/AddFileToAlbum", ReplyAction="http://tempuri.org/IDdmService/AddFileToAlbumResponse")]
        System.Threading.Tasks.Task AddFileToAlbumAsync(System.Guid albumId, System.Guid fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/AddFriendLink", ReplyAction="http://tempuri.org/IDdmService/AddFriendLinkResponse")]
        void AddFriendLink(System.Guid userId, System.Guid friendId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/AddFriendLink", ReplyAction="http://tempuri.org/IDdmService/AddFriendLinkResponse")]
        System.Threading.Tasks.Task AddFriendLinkAsync(System.Guid userId, System.Guid friendId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/GetUser", ReplyAction="http://tempuri.org/IDdmService/GetUserResponse")]
        DdmWebClient.DdmWcfServiceReference.User GetUser(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/GetUser", ReplyAction="http://tempuri.org/IDdmService/GetUserResponse")]
        System.Threading.Tasks.Task<DdmWebClient.DdmWcfServiceReference.User> GetUserAsync(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/GetAlbum", ReplyAction="http://tempuri.org/IDdmService/GetAlbumResponse")]
        DdmWebClient.DdmWcfServiceReference.Album GetAlbum(System.Guid albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/GetAlbum", ReplyAction="http://tempuri.org/IDdmService/GetAlbumResponse")]
        System.Threading.Tasks.Task<DdmWebClient.DdmWcfServiceReference.Album> GetAlbumAsync(System.Guid albumId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/GetFile", ReplyAction="http://tempuri.org/IDdmService/GetFileResponse")]
        DdmWebClient.DdmWcfServiceReference.DigitalFile GetFile(System.Guid fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/GetFile", ReplyAction="http://tempuri.org/IDdmService/GetFileResponse")]
        System.Threading.Tasks.Task<DdmWebClient.DdmWcfServiceReference.DigitalFile> GetFileAsync(System.Guid fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/GetAllUsers", ReplyAction="http://tempuri.org/IDdmService/GetAllUsersResponse")]
        DdmWebClient.DdmWcfServiceReference.User[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/GetAllUsers", ReplyAction="http://tempuri.org/IDdmService/GetAllUsersResponse")]
        System.Threading.Tasks.Task<DdmWebClient.DdmWcfServiceReference.User[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/GetAllAlbums", ReplyAction="http://tempuri.org/IDdmService/GetAllAlbumsResponse")]
        DdmWebClient.DdmWcfServiceReference.Album[] GetAllAlbums();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/GetAllAlbums", ReplyAction="http://tempuri.org/IDdmService/GetAllAlbumsResponse")]
        System.Threading.Tasks.Task<DdmWebClient.DdmWcfServiceReference.Album[]> GetAllAlbumsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/GetAllFiles", ReplyAction="http://tempuri.org/IDdmService/GetAllFilesResponse")]
        DdmWebClient.DdmWcfServiceReference.DigitalFile[] GetAllFiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDdmService/GetAllFiles", ReplyAction="http://tempuri.org/IDdmService/GetAllFilesResponse")]
        System.Threading.Tasks.Task<DdmWebClient.DdmWcfServiceReference.DigitalFile[]> GetAllFilesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDdmServiceChannel : DdmWebClient.DdmWcfServiceReference.IDdmService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DdmServiceClient : System.ServiceModel.ClientBase<DdmWebClient.DdmWcfServiceReference.IDdmService>, DdmWebClient.DdmWcfServiceReference.IDdmService {
        
        public DdmServiceClient() {
        }
        
        public DdmServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DdmServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DdmServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DdmServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Guid CreateUser(string userName, string password) {
            return base.Channel.CreateUser(userName, password);
        }
        
        public System.Threading.Tasks.Task<System.Guid> CreateUserAsync(string userName, string password) {
            return base.Channel.CreateUserAsync(userName, password);
        }
        
        public System.Guid CreateAlbum(string albumName) {
            return base.Channel.CreateAlbum(albumName);
        }
        
        public System.Threading.Tasks.Task<System.Guid> CreateAlbumAsync(string albumName) {
            return base.Channel.CreateAlbumAsync(albumName);
        }
        
        public System.Guid CreateFile(System.IO.Stream dataStream) {
            return base.Channel.CreateFile(dataStream);
        }
        
        public System.Threading.Tasks.Task<System.Guid> CreateFileAsync(System.IO.Stream dataStream) {
            return base.Channel.CreateFileAsync(dataStream);
        }
        
        public void UpdateFile(System.IO.Stream dataStream) {
            base.Channel.UpdateFile(dataStream);
        }
        
        public System.Threading.Tasks.Task UpdateFileAsync(System.IO.Stream dataStream) {
            return base.Channel.UpdateFileAsync(dataStream);
        }
        
        public System.IO.Stream GetFileStream(System.Guid fileId) {
            return base.Channel.GetFileStream(fileId);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetFileStreamAsync(System.Guid fileId) {
            return base.Channel.GetFileStreamAsync(fileId);
        }
        
        public void AddAlbumToUser(System.Guid userId, System.Guid albumId) {
            base.Channel.AddAlbumToUser(userId, albumId);
        }
        
        public System.Threading.Tasks.Task AddAlbumToUserAsync(System.Guid userId, System.Guid albumId) {
            return base.Channel.AddAlbumToUserAsync(userId, albumId);
        }
        
        public void AddFileToAlbum(System.Guid albumId, System.Guid fileId) {
            base.Channel.AddFileToAlbum(albumId, fileId);
        }
        
        public System.Threading.Tasks.Task AddFileToAlbumAsync(System.Guid albumId, System.Guid fileId) {
            return base.Channel.AddFileToAlbumAsync(albumId, fileId);
        }
        
        public void AddFriendLink(System.Guid userId, System.Guid friendId) {
            base.Channel.AddFriendLink(userId, friendId);
        }
        
        public System.Threading.Tasks.Task AddFriendLinkAsync(System.Guid userId, System.Guid friendId) {
            return base.Channel.AddFriendLinkAsync(userId, friendId);
        }
        
        public DdmWebClient.DdmWcfServiceReference.User GetUser(System.Guid userId) {
            return base.Channel.GetUser(userId);
        }
        
        public System.Threading.Tasks.Task<DdmWebClient.DdmWcfServiceReference.User> GetUserAsync(System.Guid userId) {
            return base.Channel.GetUserAsync(userId);
        }
        
        public DdmWebClient.DdmWcfServiceReference.Album GetAlbum(System.Guid albumId) {
            return base.Channel.GetAlbum(albumId);
        }
        
        public System.Threading.Tasks.Task<DdmWebClient.DdmWcfServiceReference.Album> GetAlbumAsync(System.Guid albumId) {
            return base.Channel.GetAlbumAsync(albumId);
        }
        
        public DdmWebClient.DdmWcfServiceReference.DigitalFile GetFile(System.Guid fileId) {
            return base.Channel.GetFile(fileId);
        }
        
        public System.Threading.Tasks.Task<DdmWebClient.DdmWcfServiceReference.DigitalFile> GetFileAsync(System.Guid fileId) {
            return base.Channel.GetFileAsync(fileId);
        }
        
        public DdmWebClient.DdmWcfServiceReference.User[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<DdmWebClient.DdmWcfServiceReference.User[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public DdmWebClient.DdmWcfServiceReference.Album[] GetAllAlbums() {
            return base.Channel.GetAllAlbums();
        }
        
        public System.Threading.Tasks.Task<DdmWebClient.DdmWcfServiceReference.Album[]> GetAllAlbumsAsync() {
            return base.Channel.GetAllAlbumsAsync();
        }
        
        public DdmWebClient.DdmWcfServiceReference.DigitalFile[] GetAllFiles() {
            return base.Channel.GetAllFiles();
        }
        
        public System.Threading.Tasks.Task<DdmWebClient.DdmWcfServiceReference.DigitalFile[]> GetAllFilesAsync() {
            return base.Channel.GetAllFilesAsync();
        }
    }
}
