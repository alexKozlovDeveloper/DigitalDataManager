//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DesktopClient.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetData", ReplyAction="http://tempuri.org/IService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetData", ReplyAction="http://tempuri.org/IService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserFolders", ReplyAction="http://tempuri.org/IService/GetUserFoldersResponse")]
        DdmHelpers.FileTree.Entity.FolderEntity GetUserFolders(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUserFolders", ReplyAction="http://tempuri.org/IService/GetUserFoldersResponse")]
        System.Threading.Tasks.Task<DdmHelpers.FileTree.Entity.FolderEntity> GetUserFoldersAsync(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllUserTags", ReplyAction="http://tempuri.org/IService/GetAllUserTagsResponse")]
        DbController.TableEntityes.Tag[] GetAllUserTags(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetAllUserTags", ReplyAction="http://tempuri.org/IService/GetAllUserTagsResponse")]
        System.Threading.Tasks.Task<DbController.TableEntityes.Tag[]> GetAllUserTagsAsync(System.Guid userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddTag", ReplyAction="http://tempuri.org/IService/AddTagResponse")]
        DbController.TableEntityes.Tag AddTag(System.Guid userId, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddTag", ReplyAction="http://tempuri.org/IService/AddTagResponse")]
        System.Threading.Tasks.Task<DbController.TableEntityes.Tag> AddTagAsync(System.Guid userId, string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : DesktopClient.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<DesktopClient.ServiceReference1.IService>, DesktopClient.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public DdmHelpers.FileTree.Entity.FolderEntity GetUserFolders(System.Guid userId) {
            return base.Channel.GetUserFolders(userId);
        }
        
        public System.Threading.Tasks.Task<DdmHelpers.FileTree.Entity.FolderEntity> GetUserFoldersAsync(System.Guid userId) {
            return base.Channel.GetUserFoldersAsync(userId);
        }
        
        public DbController.TableEntityes.Tag[] GetAllUserTags(System.Guid userId) {
            return base.Channel.GetAllUserTags(userId);
        }
        
        public System.Threading.Tasks.Task<DbController.TableEntityes.Tag[]> GetAllUserTagsAsync(System.Guid userId) {
            return base.Channel.GetAllUserTagsAsync(userId);
        }
        
        public DbController.TableEntityes.Tag AddTag(System.Guid userId, string name) {
            return base.Channel.AddTag(userId, name);
        }
        
        public System.Threading.Tasks.Task<DbController.TableEntityes.Tag> AddTagAsync(System.Guid userId, string name) {
            return base.Channel.AddTagAsync(userId, name);
        }
    }
}
