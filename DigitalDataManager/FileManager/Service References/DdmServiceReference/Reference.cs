//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FileSystemManager.DdmServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDateVersion", Namespace="http://schemas.datacontract.org/2004/07/DbController.Entityes")]
    [System.SerializableAttribute()]
    public partial class UserDateVersion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal VersionNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionXmlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal VersionNumber {
            get {
                return this.VersionNumberField;
            }
            set {
                if ((this.VersionNumberField.Equals(value) != true)) {
                    this.VersionNumberField = value;
                    this.RaisePropertyChanged("VersionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VersionXml {
            get {
                return this.VersionXmlField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionXmlField, value) != true)) {
                    this.VersionXmlField = value;
                    this.RaisePropertyChanged("VersionXml");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DdmServiceReference.IDigitalService")]
    public interface IDigitalService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDigitalService/GetImage", ReplyAction="http://tempuri.org/IDigitalService/GetImageResponse")]
        System.IO.Stream GetImage(string login, string imageName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDigitalService/GetImage", ReplyAction="http://tempuri.org/IDigitalService/GetImageResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetImageAsync(string login, string imageName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDigitalService/AddNewImage", ReplyAction="http://tempuri.org/IDigitalService/AddNewImageResponse")]
        void AddNewImage(System.IO.Stream imageDataStream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDigitalService/AddNewImage", ReplyAction="http://tempuri.org/IDigitalService/AddNewImageResponse")]
        System.Threading.Tasks.Task AddNewImageAsync(System.IO.Stream imageDataStream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDigitalService/UpdateImage", ReplyAction="http://tempuri.org/IDigitalService/UpdateImageResponse")]
        void UpdateImage(System.IO.Stream imageDataStream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDigitalService/UpdateImage", ReplyAction="http://tempuri.org/IDigitalService/UpdateImageResponse")]
        System.Threading.Tasks.Task UpdateImageAsync(System.IO.Stream imageDataStream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDigitalService/UpdateCatalogVersion", ReplyAction="http://tempuri.org/IDigitalService/UpdateCatalogVersionResponse")]
        void UpdateCatalogVersion(string login, string xmlVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDigitalService/UpdateCatalogVersion", ReplyAction="http://tempuri.org/IDigitalService/UpdateCatalogVersionResponse")]
        System.Threading.Tasks.Task UpdateCatalogVersionAsync(string login, string xmlVersion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDigitalService/GetLastCatalogVersion", ReplyAction="http://tempuri.org/IDigitalService/GetLastCatalogVersionResponse")]
        FileSystemManager.DdmServiceReference.UserDateVersion GetLastCatalogVersion(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDigitalService/GetLastCatalogVersion", ReplyAction="http://tempuri.org/IDigitalService/GetLastCatalogVersionResponse")]
        System.Threading.Tasks.Task<FileSystemManager.DdmServiceReference.UserDateVersion> GetLastCatalogVersionAsync(string login);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDigitalService/GetFilePart", ReplyAction="http://tempuri.org/IDigitalService/GetFilePartResponse")]
        System.IO.Stream GetFilePart(string login, string fileName, int partNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDigitalService/GetFilePart", ReplyAction="http://tempuri.org/IDigitalService/GetFilePartResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetFilePartAsync(string login, string fileName, int partNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDigitalService/AppendFile", ReplyAction="http://tempuri.org/IDigitalService/AppendFileResponse")]
        bool AppendFile(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDigitalService/AppendFile", ReplyAction="http://tempuri.org/IDigitalService/AppendFileResponse")]
        System.Threading.Tasks.Task<bool> AppendFileAsync(System.IO.Stream data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDigitalService/GetFileSize", ReplyAction="http://tempuri.org/IDigitalService/GetFileSizeResponse")]
        long GetFileSize(string login, string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDigitalService/GetFileSize", ReplyAction="http://tempuri.org/IDigitalService/GetFileSizeResponse")]
        System.Threading.Tasks.Task<long> GetFileSizeAsync(string login, string fileName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDigitalServiceChannel : FileSystemManager.DdmServiceReference.IDigitalService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DigitalServiceClient : System.ServiceModel.ClientBase<FileSystemManager.DdmServiceReference.IDigitalService>, FileSystemManager.DdmServiceReference.IDigitalService {
        
        public DigitalServiceClient() {
        }
        
        public DigitalServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DigitalServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DigitalServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DigitalServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.IO.Stream GetImage(string login, string imageName) {
            return base.Channel.GetImage(login, imageName);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetImageAsync(string login, string imageName) {
            return base.Channel.GetImageAsync(login, imageName);
        }
        
        public void AddNewImage(System.IO.Stream imageDataStream) {
            base.Channel.AddNewImage(imageDataStream);
        }
        
        public System.Threading.Tasks.Task AddNewImageAsync(System.IO.Stream imageDataStream) {
            return base.Channel.AddNewImageAsync(imageDataStream);
        }
        
        public void UpdateImage(System.IO.Stream imageDataStream) {
            base.Channel.UpdateImage(imageDataStream);
        }
        
        public System.Threading.Tasks.Task UpdateImageAsync(System.IO.Stream imageDataStream) {
            return base.Channel.UpdateImageAsync(imageDataStream);
        }
        
        public void UpdateCatalogVersion(string login, string xmlVersion) {
            base.Channel.UpdateCatalogVersion(login, xmlVersion);
        }
        
        public System.Threading.Tasks.Task UpdateCatalogVersionAsync(string login, string xmlVersion) {
            return base.Channel.UpdateCatalogVersionAsync(login, xmlVersion);
        }
        
        public FileSystemManager.DdmServiceReference.UserDateVersion GetLastCatalogVersion(string login) {
            return base.Channel.GetLastCatalogVersion(login);
        }
        
        public System.Threading.Tasks.Task<FileSystemManager.DdmServiceReference.UserDateVersion> GetLastCatalogVersionAsync(string login) {
            return base.Channel.GetLastCatalogVersionAsync(login);
        }
        
        public System.IO.Stream GetFilePart(string login, string fileName, int partNumber) {
            return base.Channel.GetFilePart(login, fileName, partNumber);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetFilePartAsync(string login, string fileName, int partNumber) {
            return base.Channel.GetFilePartAsync(login, fileName, partNumber);
        }
        
        public bool AppendFile(System.IO.Stream data) {
            return base.Channel.AppendFile(data);
        }
        
        public System.Threading.Tasks.Task<bool> AppendFileAsync(System.IO.Stream data) {
            return base.Channel.AppendFileAsync(data);
        }
        
        public long GetFileSize(string login, string fileName) {
            return base.Channel.GetFileSize(login, fileName);
        }
        
        public System.Threading.Tasks.Task<long> GetFileSizeAsync(string login, string fileName) {
            return base.Channel.GetFileSizeAsync(login, fileName);
        }
    }
}
