//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestStreamWcfService.WcfServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WcfServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFile", ReplyAction="http://tempuri.org/IService1/GetFileResponse")]
        System.IO.Stream GetFile(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFile", ReplyAction="http://tempuri.org/IService1/GetFileResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetFileAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddFile", ReplyAction="http://tempuri.org/IService1/AddFileResponse")]
        void AddFile(System.IO.Stream fileStream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddFile", ReplyAction="http://tempuri.org/IService1/AddFileResponse")]
        System.Threading.Tasks.Task AddFileAsync(System.IO.Stream fileStream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        WcfStreamService.CompositeType GetDataUsingDataContract(WcfStreamService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WcfStreamService.CompositeType> GetDataUsingDataContractAsync(WcfStreamService.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPhotoList", ReplyAction="http://tempuri.org/IService1/GetPhotoListResponse")]
        string[] GetPhotoList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPhotoList", ReplyAction="http://tempuri.org/IService1/GetPhotoListResponse")]
        System.Threading.Tasks.Task<string[]> GetPhotoListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPhotoStream", ReplyAction="http://tempuri.org/IService1/GetPhotoStreamResponse")]
        System.IO.Stream GetPhotoStream(string photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPhotoStream", ReplyAction="http://tempuri.org/IService1/GetPhotoStreamResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetPhotoStreamAsync(string photo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AppendFile", ReplyAction="http://tempuri.org/IService1/AppendFileResponse")]
        void AppendFile(System.IO.Stream info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AppendFile", ReplyAction="http://tempuri.org/IService1/AppendFileResponse")]
        System.Threading.Tasks.Task AppendFileAsync(System.IO.Stream info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFilePart", ReplyAction="http://tempuri.org/IService1/GetFilePartResponse")]
        System.IO.Stream GetFilePart(string filePath, int partNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFilePart", ReplyAction="http://tempuri.org/IService1/GetFilePartResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetFilePartAsync(string filePath, int partNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFileSize", ReplyAction="http://tempuri.org/IService1/GetFileSizeResponse")]
        long GetFileSize(string filePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFileSize", ReplyAction="http://tempuri.org/IService1/GetFileSizeResponse")]
        System.Threading.Tasks.Task<long> GetFileSizeAsync(string filePath);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : TestStreamWcfService.WcfServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<TestStreamWcfService.WcfServiceReference.IService1>, TestStreamWcfService.WcfServiceReference.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public System.IO.Stream GetFile(string name) {
            return base.Channel.GetFile(name);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetFileAsync(string name) {
            return base.Channel.GetFileAsync(name);
        }
        
        public void AddFile(System.IO.Stream fileStream) {
            base.Channel.AddFile(fileStream);
        }
        
        public System.Threading.Tasks.Task AddFileAsync(System.IO.Stream fileStream) {
            return base.Channel.AddFileAsync(fileStream);
        }
        
        public WcfStreamService.CompositeType GetDataUsingDataContract(WcfStreamService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WcfStreamService.CompositeType> GetDataUsingDataContractAsync(WcfStreamService.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public string[] GetPhotoList() {
            return base.Channel.GetPhotoList();
        }
        
        public System.Threading.Tasks.Task<string[]> GetPhotoListAsync() {
            return base.Channel.GetPhotoListAsync();
        }
        
        public System.IO.Stream GetPhotoStream(string photo) {
            return base.Channel.GetPhotoStream(photo);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetPhotoStreamAsync(string photo) {
            return base.Channel.GetPhotoStreamAsync(photo);
        }
        
        public void AppendFile(System.IO.Stream info) {
            base.Channel.AppendFile(info);
        }
        
        public System.Threading.Tasks.Task AppendFileAsync(System.IO.Stream info) {
            return base.Channel.AppendFileAsync(info);
        }
        
        public System.IO.Stream GetFilePart(string filePath, int partNumber) {
            return base.Channel.GetFilePart(filePath, partNumber);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetFilePartAsync(string filePath, int partNumber) {
            return base.Channel.GetFilePartAsync(filePath, partNumber);
        }
        
        public long GetFileSize(string filePath) {
            return base.Channel.GetFileSize(filePath);
        }
        
        public System.Threading.Tasks.Task<long> GetFileSizeAsync(string filePath) {
            return base.Channel.GetFileSizeAsync(filePath);
        }
    }
}
